apply plugin: 'com.android.application'

project.ext.set("versionMajor", "1")
project.ext.set("versionMinor", "2")
project.ext.set("versionRevision", "0")

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.nateshoffner.seachemdoser"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 3
        versionName buildVersionName()
        resValue "string", "build_revision", revision()
        resValue "string", "version_name", versionName
        resValue "string", "version_name_human", buildHumanVersionName()
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    lintOptions {
        abortOnError false
    }
}

ext {
    supportLibVersion = '23.2.1'
    versionName = '1.2.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:preference-v14:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:preference-v7:${supportLibVersion}"
    compile "uk.co.chrisjenx:calligraphy:2.1.0"
    compile('com.mikepenz:materialdrawer:5.1.6@aar') {
        transitive = true
    }
    compile 'com.mikepenz:google-material-typeface:2.2.0.1.original@aar'
    //todo upgrade this after pre-lollipop NPE is fixed
    compile('com.github.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }
    compile('com.mikepenz:aboutlibraries:5.6.1@aar') {
        transitive = true
    }
}

def revision() {
    def code = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = code
    }
    return code.toString()
}

def buildNumber() {
    return System.getenv('TRAVIS_BUILD_NUMBER') ?: "0"
}

def buildBaseVersion() {
    def major = project.ext.versionMajor
    def minor = project.ext.versionMinor
    def revision = project.ext.versionRevision

    def version = major + "." + minor

    if (revision != "0")
        version = version + "." + revision

    return version
}

def buildVersionName(){
    def version = buildBaseVersion()
    def buildNumber = buildNumber()

    if (buildNumber != "0")
        version = version + "." + buildNumber

    return version
}

def buildHumanVersionName(){
    def version = buildBaseVersion()
    def buildNumber = buildNumber()

    if (buildNumber != "0")
        version = version + " (Build " + buildNumber + ")"

    return version
}